{"version":3,"sources":["components/topButton/BookMark.js","components/topButton/TopBlock.js","components/InputName.js","components/InputTasksForm.js","redux/constants.js","components/InputTask.js","redux/action.js","components/AddTask.js","components/List.js","components/TodoLists.js","components/pages/MyTask.js","components/pages/InProgress.js","components/pages/Completed.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["BookMark","exact","path","this","props","to","children","className","match","class","name","React","Component","TopBlock","id","InputName","inputName","InputTasksForm","type","value","stateData","date","onChange","changeState","time","ref","filebox","file","rows","cols","commit","onClick","closeAdd","submitTodo","todoData","important","complete","ConnectInputTask","listData","state","createRef","bind","tagImportant","changeListState","console","log","event","target","substring","lastIndexOf","checked","setState","alert","addTodoList","editTodoList","current","placeholder","InputTask","connect","dispatch","todoList","payload","AddTask","document","getElementById","style","display","openAdd","ConnectList","editTasks","updateTodoList","openEdit","closeEdit","list","window","updateList","Object","assign","indexOf","replace","List","ConnectTodoLists","data","sort","f","s","todoCount","Lists","map","item","page","key","TodoLists","MyTask","InProgress","Completed","todoListReducer","action","length","newState","slice","i","splice","todoListStore","createStore","store","App","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5260e222.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Link} from 'react-router-dom';\r\n\r\nclass BookMark extends React.Component {\r\n    render() {\r\n        return (\r\n        <Route exact path={this.props.to}\r\n               children={props=> {\r\n                    let className = \"bookMark\"\r\n                    props.match? className+=\" select_bookMark\": className=\"bookMark\"\r\n\r\n                    return (\r\n                        <Link to={this.props.to}>\r\n                            <button class={className}>{this.props.name}</button>\r\n                        </Link>\r\n                    )\r\n\r\n               } } />\r\n        )       \r\n    }\r\n}\r\n\r\n\r\nexport default BookMark;","import React from 'react';\r\nimport BookMark from './BookMark';\r\n\r\nclass TopBlock extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"topBlock\">\r\n                <BookMark to=\"/\" name=\"My Tasks\" />\r\n                <BookMark to=\"/inProgress\" name=\"In Progress\" />\r\n                <BookMark to=\"/completed\" name=\"Completed\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopBlock;","import React from 'react';\r\n\r\nclass InputName extends React.Component{\r\n    render() {\r\n        return (\r\n            <div class=\"inputName\">\r\n                <i class={this.props.className}></i> {this.props.inputName}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputName;","import React from 'react';\r\nimport InputName from './InputName';\r\n\r\nclass InputTasksForm extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"InputTask\">\r\n                    <InputName className=\"fas fa-calendar-alt\" inputName=\"Deadline\" />\r\n                    <div class=\"inputForm\">\r\n                        <input name=\"date\" type=\"date\" class=\"inputStyle inputDateTime\" value={this.props.stateData.date} onChange={this.props.changeState} />\r\n                        &nbsp;&nbsp;\r\n                        <input name=\"time\" type=\"time\" class=\"inputStyle inputDateTime\" value={this.props.stateData.time} onChange={this.props.changeState} />\r\n                    </div>\r\n\r\n                    <InputName className=\"fas fa-file\" inputName=\"File\" />\r\n                    <div class=\"inputForm\">\r\n                        <input name=\"file\" type=\"file\" class=\"inputStyle\" ref={this.props.filebox} onChange={this.props.changeState} /><br/>\r\n                        <span class=\"inputStyle\">{this.props.stateData.file}</span>\r\n                    </div>\r\n\r\n                    <InputName className=\"far fa-comment-dots\" inputName=\"Comment\" />\r\n                    <div class=\"inputForm\">\r\n                        <textarea name=\"commit\" rows=\"5\" cols=\"55\" class=\"inputStyle\"\r\n                             value={this.props.stateData.commit} \r\n                             onChange={this.props.changeState} >\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"addButton cancelButton\" onClick={this.props.closeAdd}> Cancel</button>\r\n                    <button type=\"button\" class=\"addButton saveButton\" onClick={this.props.submitTodo}> Save</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTasksForm;","const todoData = [\r\n    {id:1,name:'丟履歷',date:'2020-05-20',time:'10:00',file:'',\r\n    commit:'LinkedIn Network',important:'Y',complete:false},\r\n    {id:2,name:'繳房租',date:'2020-05-18',time:'13:00',file:'',\r\n    commit:'6、7月房租',important:'Y',complete:false},\r\n    {id:3,name:'開會',date:'2020-05-19',time:'14:00',file:'',\r\n    commit:'會議室',important:'',complete:false}\r\n]\r\n\r\nconst ADDTODOLIST = \"ADDTODOLIST\"\r\nconst EDITTODOLIST = \"EDITTODOLIST\"\r\n\r\nexport {todoData, ADDTODOLIST, EDITTODOLIST }\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputTasksForm from './InputTasksForm';\r\nimport { addTodoList } from '../redux/action';\r\n\r\nclass ConnectInputTask  extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        if (this.props.listData) {  //新增的話則不會有listData\r\n            this.state = this.props.listData\r\n        } else {\r\n            this.state = {\r\n                id:'',\r\n                name:'',\r\n                date:'',\r\n                time:'',\r\n                file:'',\r\n                commit:'',\r\n                important:'',\r\n                complete:false\r\n            }\r\n        }\r\n\r\n        this.filebox = React.createRef()\r\n        //另外考慮有一個檔案上傳沒辦法設定value,所以使用Ref\r\n\r\n        this.changeState = this.changeState.bind(this)\r\n        this.tagImportant = this.tagImportant.bind(this)\r\n        this.submitTodo = this.submitTodo.bind(this)\r\n\r\n        this.changeListState = type=>{\r\n            if(this.props.changeState) {\r\n                this.props.changeState(type)\r\n            } else {\r\n                console.log('新增狀態所以沒有this.props.changeState')\r\n            }\r\n        }\r\n    }\r\n\r\n    changeState(event) {\r\n        let value = event.target.value\r\n        if (event.target.name===\"file\") {\r\n            value = value.substring(value.lastIndexOf('\\\\')+1)\r\n        } else if (event.target.name===\"complete\") {\r\n            value = event.target.checked\r\n            this.changeListState('complete')\r\n        }\r\n        this.setState({[event.target.name]:value})\r\n    }\r\n\r\n    tagImportant() {\r\n        if (this.state.important === '') {\r\n            this.setState({ important: 'Y' })\r\n        } else {\r\n            this.setState({ important: '' })\r\n        }\r\n        //一併更新狀態到外面的`List`組件去\r\n        this.changeListState('important')\r\n\r\n    }\r\n\r\n    submitTodo() {\r\n        //先檢查資料，至少要有名稱\r\n        if (this.state.name === '') {\r\n            alert('待辦事項名稱未輸入！')\r\n        } else {\r\n            //判斷id是否有值\r\n            if (this.state.id === '') {\r\n                this.props.addTodoList(this.state)\r\n                alert('成功新增！')\r\n            }\r\n            else {\r\n            //有的話就執行編輯\r\n                this.props.editTodoList(this.state)\r\n                alert('編輯成功！')\r\n            }\r\n\r\n            \r\n            //初始化資料資料\r\n            this.setState({id:'',name:'',date:'',time:'',file:'',commit:''\r\n            ,important:'',complete:false})\r\n            //不受控組件另外處理\r\n            this.filebox.current.value = ''\r\n\r\n            this.props.closeAdd()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class={this.state.important === 'Y' ?'important inputTaskTitle' : 'inputTaskTitle'}>\r\n                    <input name=\"complete\" type=\"checkbox\" class=\"taskChk\" checked={this.state.complete} onChange={this.changeState} />\r\n                    <input name=\"name\" type=\"text\" placeholder=\"Type something here!\"\r\n                           class={(this.state.important === 'Y' ?\r\n                           'important taskTitle ' : 'taskTitle ') +\r\n                           (this.state.complete ? 'complete' : '')} value={this.state.name} onChange={this.changeState} />\r\n\r\n                    <i class={this.state.important === 'Y' ?\r\n                        'fas fa-star fa-lg icon iconImportant' : 'far fa-star fa-lg icon'}\r\n                        onClick={this.tagImportant} ></i>\r\n                    <i class=\"fas fa-pen fa-lg icon icon_edit\"></i>\r\n                </div>\r\n                <InputTasksForm \r\n                    closeAdd={this.props.closeAdd}\r\n                    stateData={this.state}\r\n                    changeState={this.changeState}\r\n                    submitTodo={this.submitTodo}\r\n                    filebox={this.filebox} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { //使用dispatch呼叫事件addTodoList操作store\r\n        addTodoList: todoList => dispatch(addTodoList(todoList))\r\n    }\r\n}\r\n\r\n//而因為該組件並不需要取得任何資料，所以在沒有第一個參數mapDispatchToProps的情況下直接傳入null\r\nconst InputTask = connect(null,mapDispatchToProps)(ConnectInputTask)\r\n\r\n\r\nexport default InputTask;","import {ADDTODOLIST, EDITTODOLIST} from './constants'\r\n\r\n\r\n//動作指令設定\r\n\r\n/*設定的動作是異動資料的意思，像是更改資料內容、新增或刪除等等，\r\n但是看到這裡也許會覺得很奇怪，因為資料是從server端撈出來的，\r\n所以最源頭的資料應該是不能更改的\r\n */\r\n\r\n /*\r\n type: 動作的指令\r\n payload: 執行動作要傳入的資料\r\n  */\r\nconst addTodoList = todoList => ({\r\n    type : ADDTODOLIST, payload : todoList\r\n})\r\n\r\nconst editTodoList = todoList => ({\r\n    type: EDITTODOLIST, payload : todoList\r\n})\r\n\r\nexport {addTodoList, editTodoList}","import React from 'react';\r\nimport InputTask from './InputTask';\r\n\r\nclass AddTask extends React.Component {\r\n    openAdd(){\r\n        //隱藏輸入框\r\n        document.getElementById('addTask').style.display='none'\r\n        //顯示輸入表單\r\n        document.getElementById('inputTask').style.display=''\r\n    }\r\n\r\n    closeAdd(){\r\n        //顯示輸入框\r\n        document.getElementById('addTask').style.display=''\r\n        //隱藏輸入表單\r\n        document.getElementById('inputTask').style.display='none'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input id=\"addTask\" value=\" + Add New Task\" onClick={this.openAdd}/>\r\n                </div>\r\n                <div id=\"inputTask\" style={{display:'none'}}>\r\n                    <InputTask closeAdd={this.closeAdd} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InputTask from './InputTask';\r\nimport {editTodoList} from '../redux/action';\r\n\r\n/*List組件來讀資料，取到所有的事項資料後再用迴圈將每筆事項用組件讀出來 */\r\nclass ConnectList  extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            important: this.props.listData.important,\r\n            complete: this.props.listData.complete,\r\n            editTasks: null\r\n        }\r\n        /*顯示事項的時候，也可以同時標記已完成和是否重要 */\r\n\r\n        this.changeState = this.changeState.bind(this)\r\n        this.updateTodoList = this.updateTodoList.bind(this)\r\n        this.openEdit = this.openEdit.bind(this)\r\n        this.closeEdit = this.closeEdit.bind(this)\r\n        this.list = React.createRef()\r\n    }\r\n\r\n    changeState(type) {\r\n        switch(type) {\r\n            case \"complete\": {\r\n                this.setState({\r\n                    complete: window.event.target.checked\r\n                }, this.updateTodoList)\r\n                break;\r\n            }\r\n\r\n            case \"important\": {\r\n                if (this.state.important === ''){\r\n                    this.setState({ important: 'Y' }, this.updateTodoList)\r\n                } else {\r\n                    this.setState({ important: '' }, this.updateTodoList)\r\n                }\r\n                break;\r\n            }\r\n\r\n            default:\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    updateTodoList() {\r\n        let updateList = Object.assign({}, this.props.listData)\r\n\r\n        updateList = {...updateList,\r\n                        complete: this.state.complete,\r\n                        important: this.state.important}\r\n\r\n        this.props.editTodoList(updateList)\r\n\r\n    }\r\n\r\n    openEdit(event) {\r\n        if (event.target.className.indexOf('fa-star') === -1 &&\r\n        event.target.className.indexOf('taskChk') === -1) {\r\n            this.list.current.style.display='none'\r\n            this.setState({editTasks:(<InputTask closeAdd={this.closeEdit} listData={this.props.listData}\r\n                                                 changeState={this.changeState}\r\n                                                 editTodoList={this.props.editTodoList} />)})\r\n    \r\n        }\r\n    }\r\n\r\n    closeEdit() {\r\n        this.list.current.style.display=''\r\n        this.setState({editTasks:null})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"listBlock\">\r\n                <div class={' list ' + (this.state.important === 'Y' ? ' important ' : '')} \r\n                             onClick={this.openEdit} ref={this.list}>\r\n                    <input type=\"checkbox\" class=\"taskChk\" checked={this.state.complete} onChange={this.changeState.bind(this,'complete')} />\r\n                    <input type=\"text\" class={' taskTitle ' + (this.state.complete ? ' complete ' : '') +\r\n                                (this.state.important ? ' important ' : '') } value={this.props.listData.name}  />\r\n                    <i class={this.state.important === 'Y' ? ' fas fa-star fa-lg iconImportant icon' : ' far fa-star fa-lg icon'}\r\n                        onClick={this.changeState.bind(this,'important')}></i>\r\n                    <i class=\"fas fa-pen fa-lg icon\"></i>\r\n\r\n                    <div class=\"listIcon\">\r\n                        {this.props.listData.date !== '' ?\r\n                            <i class=\"far fa-calendar-alt icon\"></i> : ''}\r\n                        {this.props.listData.date !== '' ?\r\n                            ` ${this.props.listData.date.substring(5).replace('-', '/')} ` : ''}\r\n\r\n                        {this.props.listData.file !== '' ?\r\n                            <i class=\"fas fa-file icon\"></i> : ''}\r\n\r\n                        {this.props.listData.commit !== '' ?\r\n                            <i class=\"far fa-comment-dots icon\"></i> : ''}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {this.state.editTasks}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editTodoList: todoList => dispatch(editTodoList(todoList))\r\n    }\r\n}\r\n\r\n\r\nconst List = connect(null, mapDispatchToProps)(ConnectList)\r\n\r\nexport default List;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from './List';\r\n\r\nclass ConnectTodoLists extends React.Component {\r\n\r\n    render() {\r\n        this.props.data\r\n            .sort((f,s) => {return f.important<s.important?1:-1})\r\n            .sort((f,s) => {return f.complete>s.complete?1:-1})\r\n\r\n\r\n        let todoCount = 0\r\n        let Lists = this.props.data.map((item) => {\r\n            if (this.props.page === \"progress\") {\r\n                if(item.complete){\r\n                    return null\r\n                }\r\n            } else if (this.props.page === \"completed\"){\r\n                if(!item.complete){\r\n                    return null\r\n                }\r\n            }\r\n                \r\n            if(this.props.page){\r\n                todoCount++\r\n            }\r\n            else if(!item.complete){\r\n                todoCount++\r\n            }\r\n            return <List key={item.id} listData={item} />\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {Lists}\r\n                </div>\r\n                <div class=\"countText\">\r\n                    <span>{todoCount} tasks {this.props.page === \"completed\"? \"completed\": \"left\"}.</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = state => {\r\n    return {data: state}\r\n}\r\n\r\nconst TodoLists = connect(mapStoreToProps)(ConnectTodoLists)\r\n\r\nexport default TodoLists;","import React from 'react';\r\nimport AddTask from '../AddTask';\r\nimport TodoLists from '../TodoLists'\r\n\r\nclass MyTask extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"InputTasksForm\">\r\n                <AddTask />\r\n                <TodoLists />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyTask;","import React from 'react';\r\nimport TodoLists from '../TodoLists';\r\n\r\nclass InProgress extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"InputTasksForm\">\r\n                <TodoLists page=\"progress\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InProgress;","import React from 'react';\r\nimport TodoLists from '../TodoLists';\r\n\r\nclass Completed extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"InputTasksForm\">\r\n                <TodoLists page=\"completed\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Completed;","import {todoData, ADDTODOLIST, EDITTODOLIST} from './constants';\r\n\r\n\r\n/*\r\nreducer 會在裡面描述每個動作對資料發生的事情, 而因為動作通常不只一個,\r\n所以會用switch來判斷目前收到的指令\r\n */\r\nconst todoListReducer = (state = todoData, action) => {\r\n    switch(action.type){\r\n        case ADDTODOLIST:{\r\n            action.payload.id = state.length + 1\r\n            return [...state, action.payload]\r\n        }\r\n\r\n        case EDITTODOLIST: {\r\n            //先以目前的資料去複製另一個全新的陣列\r\n            let newState = state.slice(0)\r\n            //下迴圈比對id值\r\n            for (let i = 0; i <= newState.length - 1; i++) {\r\n                if (newState[i].id === action.payload.id){\r\n                    //將新的資料用splice()取代原本的位置中的資料\r\n                    newState.splice(i, 1, action.payload)\r\n                    break;\r\n                }\r\n            }\r\n            //回傳處理後的新資料\r\n            return newState\r\n        }\r\n\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default todoListReducer;","import {createStore} from 'redux';\r\nimport todoListReducer from './reducer';\r\n\r\n/*store 會保管一個應用程式中所有的資料 */\r\nconst todoListStore = createStore(todoListReducer)\r\n\r\nexport default todoListStore;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {HashRouter, Route} from 'react-router-dom';\n\nimport TopBlock from './components/topButton/TopBlock';\nimport MyTask from './components/pages/MyTask';\nimport InProgress from './components/pages/InProgress';\nimport Completed from './components/pages/Completed';\n\nimport todoListStore from './redux/store';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={todoListStore}>\n      <HashRouter>\n        <div class=\"alignCenter\">\n          <TopBlock />\n          <Route exact path=\"/\" component={MyTask} />\n          <Route exact path=\"/inProgress\" component={InProgress} />\n          <Route exact path=\"/completed\" component={Completed} />\n        </div>\n      </HashRouter>\n    </Provider>\n\n  );\n}\n\nwindow.store = todoListStore\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}